// Load Sea Surface Temperature data (and then divide by 100 to get Celsius)
var sst = ee.ImageCollection('NOAA/CDR/OISST/V2');
var convertToCelsius = function(image) {
  var celsius = image
  .select('sst')
  .divide(100);
  return image.select(['ice', 'anom']).addBands(celsius);
};
sst = sst.map(convertToCelsius);

// Decide start and end dates of analysis
var start_date = "2016-01-01"; 
var end_date = "2016-12-31";
// Apply date filter over SST
sst = sst.filterDate(start_date, end_date);

// MAKE GRID FOR "REGIONAL" SST (3 STEPS)

// 1) Create bounding box (here, centered just left of Hawaii)
var lon_start = -180;
var lon_end = -160;
var lat_start = 10; 
var lat_end = 30;
// 2) Decide no. of (in this case: equally sized) cells
var num_cells = 4;
var lon_edge = (lon_end-lon_start)/Math.sqrt(num_cells);
var lat_edge = (lat_end-lat_start)/Math.sqrt(num_cells);
// 3) Create the grid
var polys = [];
var polys_line = [];
var cell_id = 0;
for (var lon = lon_start; lon < lon_end; lon += lon_edge) {
  var x1 = lon;
  var x2 = lon + lon_edge;
  for (var lat = lat_start; lat < lat_end; lat += lat_edge) {
    cell_id = cell_id + 1;
    var y1 = lat;
    var y2 = lat + lat_edge;

    polys.push(ee.Feature(ee.Geometry.Rectangle(x1, y1, x2, y2), {label: cell_id}));
  }
}
var grid = ee.FeatureCollection(polys);


// CLIP SST TO STUDY AREA (NOT STRICTLY NECESSARY, BUT USEFUL FOR VIZUALISATION)

function clipToGrid(image) {
  return image.clip(grid);
}
var sst = sst.map(clipToGrid);


// ADD MAP LAYERS

// Center map
Map.centerObject(grid, 3);
// Add mean SST for 2016
Map.addLayer(sst
  .mean(),
  {bands:"sst", min:20, max:35, palette:["yellow","green"], opacity:1},
  "Mean Sea Surface Temperature (2016)");
// Add grid
//Map.addLayer(grid, {}, 'Grid');
// Problem with the above line is that it includes a fill. We only want the outline:
// First, create an (empty) 8bit image and paint the geometries onto that image.
var gridOutlines = ee.Image().toByte()
                 .paint(grid.geometry(), 0, 2);    
// Next, use this variable to display just the grid outlines
Map.addLayer(gridOutlines, {
      palette: 'black',  
  }, 'Grid'); 
  

// CREATE AND PRINT A REGIONAL TIME SERIES CHART

var sstTS = ui.Chart.image.seriesByRegion(
    sst, 
    grid, ee.Reducer.mean(), 'sst', 200, 'system:time_start', 'label'
    )
    .setChartType('ScatterChart')
    .setOptions({
      title: 'Mean SST per grid cell',
      vAxis: {title: 'Temperature (C)'},
      lineWidth: 1,
      pointSize: 4
      });
print(sstTS);