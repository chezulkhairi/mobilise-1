/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var roi = /* color: #d63000 */ee.Geometry.Polygon(
        [[[79.2333984375, 5.68158368342113],
          [82.50732421875, 5.769035866122135],
          [82.24365234375, 9.86062814536589],
          [78.85986328125, 9.903921416774978]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
ttps://github.com/gee-community/gee_tools/blob/master/js/ExportCol.js. Take in consideration that it will require you to 'Run' every single task manually. It would be something like:

var ExportCol = function(col, folder, scale, type,
                         nimg, maxPixels, region) {
    type = type || "float";
    nimg = nimg || 500;
    scale = scale || 1000;
    maxPixels = maxPixels || 1e10;

    var colList = col.toList(nimg);
    var n = colList.size().getInfo();

    for (var i = 0; i < n; i++) {
      var img = ee.Image(colList.get(i));
      var id = img.id().getInfo();
      region = region || img.geometry().bounds().getInfo()["coordinates"];

      var imgtype = {"float":img.toFloat(), 
                     "byte":img.toByte(), 
                     "int":img.toInt(),
                     "double":img.toDouble()
                    }

      Export.image.toDrive({
        image:imgtype[type],
        description: id,
        folder: folder,
        fileNamePrefix: id,
        region: region,
        scale: scale,
        maxPixels: maxPixels})
    }
  }

// Load Landsat 8 ImageCollection for area.
var collection=ee.ImageCollection('LANDSAT/LC08/C01/T1_TOA')
  .filterDate('2015-01-01','2015-02-28')
  .filterBounds(AOI).select('B2'); 
print('Landsat: ', collection);

//ExportCol(collection, 'Collection1', 30)
ExportCol(collection, 'Collection1', 30, 'float', 500, 1e10, AOI) 